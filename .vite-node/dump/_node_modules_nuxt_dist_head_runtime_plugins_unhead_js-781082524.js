// /node_modules/nuxt/dist/head/runtime/plugins/unhead.js
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/@unhead/vue/dist/index.mjs", {"importedNames":["createHead","setHeadInjectionHandler"]});
const __vite_ssr_import_1__ = await __vite_ssr_import__("@unhead/dom", {"importedNames":["renderDOMHead"]});
const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/nuxt.js", {"importedNames":["defineNuxtPlugin","useNuxtApp"]});
const __vite_ssr_import_3__ = await __vite_ssr_import__("/@id/virtual:nuxt:%2Fmedia%2Fdd%2FData%2FProjects%2Fdionmaicon.github.io%2F.nuxt%2Funhead-plugins.mjs", {"importedNames":["default"]});
__vite_ssr_exports__.default = (0,__vite_ssr_import_2__.defineNuxtPlugin)({
  name: "nuxt:head",
  enforce: "pre",
  setup(nuxtApp) {
    const head = true ? nuxtApp.ssrContext.head : (0,__vite_ssr_import_0__.createHead)({
      plugins: __vite_ssr_import_3__.default
    });
    (0,__vite_ssr_import_0__.setHeadInjectionHandler)(
      // need a fresh instance of the nuxt app to avoid parallel requests interfering with each other
      () => (0,__vite_ssr_import_2__.useNuxtApp)().vueApp._context.provides.usehead
    );
    nuxtApp.vueApp.use(head);
    if (false) {
      let pauseDOMUpdates = true;
      const syncHead = async () => {
        pauseDOMUpdates = false;
        await (0,__vite_ssr_import_1__.renderDOMHead)(head);
      };
      head.hooks.hook("dom:beforeRender", (context) => {
        context.shouldRender = !pauseDOMUpdates;
      });
      nuxtApp.hooks.hook("page:start", () => {
        pauseDOMUpdates = true;
      });
      nuxtApp.hooks.hook("page:finish", () => {
        if (!nuxtApp.isHydrating) {
          syncHead();
        }
      });
      nuxtApp.hooks.hook("app:error", syncHead);
      nuxtApp.hooks.hook("app:suspense:resolve", syncHead);
    }
  }
});
