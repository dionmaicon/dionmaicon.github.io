// /node_modules/nuxt/dist/app/components/nuxt-error-page.vue
const __vite_ssr_import_0__ = await __vite_ssr_import__("vue", {"importedNames":["defineAsyncComponent"]});const __vite_ssr_import_1__ = await __vite_ssr_import__("vue", {"importedNames":["mergeProps"]});const __vite_ssr_import_2__ = await __vite_ssr_import__("vue/server-renderer", {"importedNames":["ssrRenderComponent"]});const __vite_ssr_import_3__ = await __vite_ssr_import__("vue", {"importedNames":["useSSRContext"]});const __vite_ssr_import_4__ = await __vite_ssr_import__("/@id/__x00__plugin-vue:export-helper", {"importedNames":["default"]});


const _sfc_main = {
  __name: 'nuxt-error-page',
  props: {
  error: Object,
},
  setup(__props, { expose: __expose }) {
  __expose();

const props = __props;

// Deliberately prevent reactive update when error is cleared
const _error = props.error;

// TODO: extract to a separate utility
const stacktrace = _error.stack
  ? _error.stack
      .split('\n')
      .splice(1)
      .map((line) => {
        const text = line
          .replace('webpack:/', '')
          .replace('.vue', '.js') // TODO: Support sourcemap
          .trim();
        return {
          text,
          internal: (line.includes('node_modules') && !line.includes('.cache')) ||
          line.includes('internal') ||
          line.includes('new Promise'),
        }
      }).map(i => `<span class="stack${i.internal ? ' internal' : ''}">${i.text}</span>`).join('\n')
  : '';

// Error page props
const statusCode = Number(_error.statusCode || 500);
const is404 = statusCode === 404;

const statusMessage = _error.statusMessage ?? (is404 ? 'Page Not Found' : 'Internal Server Error');
const description = _error.message || _error.toString();
const stack = true && !is404 ? _error.description || `<pre>${stacktrace}</pre>` : undefined;

// TODO: Investigate side-effect issue with imports
const _Error404 = (0,__vite_ssr_import_0__.defineAsyncComponent)(() => __vite_ssr_dynamic_import__("/node_modules/nuxt/dist/app/components/error-404.vue"));
const _Error = true
  ? (0,__vite_ssr_import_0__.defineAsyncComponent)(() => __vite_ssr_dynamic_import__("/node_modules/nuxt/dist/app/components/error-dev.vue"))
  : (0,__vite_ssr_import_0__.defineAsyncComponent)(() => __vite_ssr_dynamic_import__("/node_modules/nuxt/dist/app/components/error-500.vue"));

const ErrorTemplate = is404 ? _Error404 : _Error;

const __returned__ = { props, _error, stacktrace, statusCode, is404, statusMessage, description, stack, _Error404, _Error, ErrorTemplate, defineAsyncComponent: __vite_ssr_import_0__.defineAsyncComponent };
Object.defineProperty(__returned__, '__isScriptSetup', { enumerable: false, value: true });
return __returned__
}

};



function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push((0,__vite_ssr_import_2__.ssrRenderComponent)($setup["ErrorTemplate"], (0,__vite_ssr_import_1__.mergeProps)({ statusCode: $setup.statusCode, statusMessage: $setup.statusMessage, description: $setup.description, stack: $setup.stack }, { "data-v-inspector": "node_modules/nuxt/dist/app/components/nuxt-error-page.vue:48:3" }, _attrs), null, _parent))
}



const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = (0,__vite_ssr_import_3__.useSSRContext)()
  ;(ssrContext.modules || (ssrContext.modules = new Set())).add("node_modules/nuxt/dist/app/components/nuxt-error-page.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : undefined
};

__vite_ssr_exports__.default = /*#__PURE__*/(0,__vite_ssr_import_4__.default)(_sfc_main, [['ssrRender',_sfc_ssrRender],['__file',"/media/dd/Data/Projects/dionmaicon.github.io/node_modules/nuxt/dist/app/components/nuxt-error-page.vue"]])