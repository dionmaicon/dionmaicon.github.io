// /node_modules/nuxt/dist/pages/runtime/validate.js
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/unctx/dist/index.mjs", {"importedNames":["executeAsync"]});const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/composables/error.js", {"importedNames":["createError","showError"]});const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/nuxt.js", {"importedNames":["useNuxtApp"]});const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/composables/router.js", {"importedNames":["defineNuxtRouteMiddleware","useRouter"]});/* _processed_nuxt_unctx_transform */



__vite_ssr_exports__.default = (0,__vite_ssr_import_3__.defineNuxtRouteMiddleware)(async (to) => {let __temp, __restore;
  if (!to.meta?.validate) {
    return;
  };
  const nuxtApp = (0,__vite_ssr_import_2__.useNuxtApp)();
  const router = (0,__vite_ssr_import_3__.useRouter)();
  const result = (([__temp,__restore]=(0,__vite_ssr_import_0__.executeAsync)(()=>Promise.resolve(to.meta.validate(to)))),__temp=await __temp,__restore(),__temp);
  if (result === true) {
    return;
  };
  const error = (0,__vite_ssr_import_1__.createError)({
    statusCode: result && result.statusCode || 404,
    statusMessage: result && result.statusMessage || `Page Not Found: ${to.fullPath}`,
    data: {
      path: to.fullPath
    }
  });
  const unsub = router.beforeResolve((final) => {
    unsub();
    if (final === to) {
      const unsub2 = router.afterEach(async () => {
        unsub2();
        await nuxtApp.runWithContext(() => (0,__vite_ssr_import_1__.showError)(error));
      });
      return false;
    }
  });
},1);
