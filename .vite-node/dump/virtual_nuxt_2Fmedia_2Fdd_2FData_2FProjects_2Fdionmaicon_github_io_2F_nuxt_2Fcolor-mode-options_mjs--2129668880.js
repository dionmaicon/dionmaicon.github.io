// virtual:nuxt:%2Fmedia%2Fdd%2FData%2FProjects%2Fdionmaicon.github.io%2F.nuxt%2Fcolor-mode-options.mjs
const preference = "system";
Object.defineProperty(__vite_ssr_exports__, "preference", { enumerable: true, configurable: true, get(){ return preference }});
const fallback = "light";
Object.defineProperty(__vite_ssr_exports__, "fallback", { enumerable: true, configurable: true, get(){ return fallback }});
const hid = "nuxt-color-mode-script";
Object.defineProperty(__vite_ssr_exports__, "hid", { enumerable: true, configurable: true, get(){ return hid }});
const globalName = "__NUXT_COLOR_MODE__";
Object.defineProperty(__vite_ssr_exports__, "globalName", { enumerable: true, configurable: true, get(){ return globalName }});
const componentName = "ColorScheme";
Object.defineProperty(__vite_ssr_exports__, "componentName", { enumerable: true, configurable: true, get(){ return componentName }});
const classPrefix = "";
Object.defineProperty(__vite_ssr_exports__, "classPrefix", { enumerable: true, configurable: true, get(){ return classPrefix }});
const classSuffix = "-mode";
Object.defineProperty(__vite_ssr_exports__, "classSuffix", { enumerable: true, configurable: true, get(){ return classSuffix }});
const dataValue = "";
Object.defineProperty(__vite_ssr_exports__, "dataValue", { enumerable: true, configurable: true, get(){ return dataValue }});
const storageKey = "nuxt-color-mode";
Object.defineProperty(__vite_ssr_exports__, "storageKey", { enumerable: true, configurable: true, get(){ return storageKey }});
const storage = "localStorage";
Object.defineProperty(__vite_ssr_exports__, "storage", { enumerable: true, configurable: true, get(){ return storage }});
const disableTransition = false;
Object.defineProperty(__vite_ssr_exports__, "disableTransition", { enumerable: true, configurable: true, get(){ return disableTransition }});
const script = '"use strict";(()=>{const t=window,e=document.documentElement,c=["dark","light"],n=getStorageValue("localStorage","nuxt-color-mode")||"system";let i=n==="system"?u():n;const r=e.getAttribute("data-color-mode-forced");r&&(i=r),l(i),t["__NUXT_COLOR_MODE__"]={preference:n,value:i,getColorScheme:u,addColorScheme:l,removeColorScheme:d};function l(o){const s=""+o+"-mode",a="";e.classList?e.classList.add(s):e.className+=" "+s,a&&e.setAttribute("data-"+a,o)}function d(o){const s=""+o+"-mode",a="";e.classList?e.classList.remove(s):e.className=e.className.replace(new RegExp(s,"g"),""),a&&e.removeAttribute("data-"+a)}function f(o){return t.matchMedia("(prefers-color-scheme"+o+")")}function u(){if(t.matchMedia&&f("").media!=="not all"){for(const o of c)if(f(":"+o).matches)return o}return"light"}})();function getStorageValue(t,e){switch(t){case"localStorage":return window.localStorage.getItem(e);case"sessionStorage":return window.sessionStorage.getItem(e);case"cookie":return getCookie(e);default:return null}}function getCookie(t){const c=("; "+window.document.cookie).split("; "+t+"=");if(c.length===2)return c.pop()?.split(";").shift()}';
Object.defineProperty(__vite_ssr_exports__, "script", { enumerable: true, configurable: true, get(){ return script }});

//# sourceMappingSource=vite-node
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6IkFBQU8sTUFBTSxhQUFhOztBQUVuQixNQUFNLFdBQVc7O0FBRWpCLE1BQU0sTUFBTTs7QUFFWixNQUFNLGFBQWE7O0FBRW5CLE1BQU0sZ0JBQWdCOztBQUV0QixNQUFNLGNBQWM7O0FBRXBCLE1BQU0sY0FBYzs7QUFFcEIsTUFBTSxZQUFZOztBQUVsQixNQUFNLGFBQWE7O0FBRW5CLE1BQU0sVUFBVTs7QUFFaEIsTUFBTSxvQkFBb0I7O0FBRTFCLE1BQU0sU0FBUyIsIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOlsidmlydHVhbDpudXh0OiUyRm1lZGlhJTJGZGQlMkZEYXRhJTJGUHJvamVjdHMlMkZkaW9ubWFpY29uLmdpdGh1Yi5pbyUyRi5udXh0JTJGY29sb3ItbW9kZS1vcHRpb25zLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgcHJlZmVyZW5jZSA9IFwic3lzdGVtXCJcbiAgICAgIFxuZXhwb3J0IGNvbnN0IGZhbGxiYWNrID0gXCJsaWdodFwiXG4gICAgICBcbmV4cG9ydCBjb25zdCBoaWQgPSBcIm51eHQtY29sb3ItbW9kZS1zY3JpcHRcIlxuICAgICAgXG5leHBvcnQgY29uc3QgZ2xvYmFsTmFtZSA9IFwiX19OVVhUX0NPTE9SX01PREVfX1wiXG4gICAgICBcbmV4cG9ydCBjb25zdCBjb21wb25lbnROYW1lID0gXCJDb2xvclNjaGVtZVwiXG4gICAgICBcbmV4cG9ydCBjb25zdCBjbGFzc1ByZWZpeCA9IFwiXCJcbiAgICAgIFxuZXhwb3J0IGNvbnN0IGNsYXNzU3VmZml4ID0gXCItbW9kZVwiXG4gICAgICBcbmV4cG9ydCBjb25zdCBkYXRhVmFsdWUgPSBcIlwiXG4gICAgICBcbmV4cG9ydCBjb25zdCBzdG9yYWdlS2V5ID0gXCJudXh0LWNvbG9yLW1vZGVcIlxuICAgICAgXG5leHBvcnQgY29uc3Qgc3RvcmFnZSA9IFwibG9jYWxTdG9yYWdlXCJcbiAgICAgIFxuZXhwb3J0IGNvbnN0IGRpc2FibGVUcmFuc2l0aW9uID0gZmFsc2VcbiAgICAgIFxuZXhwb3J0IGNvbnN0IHNjcmlwdCA9IFwiXFxcInVzZSBzdHJpY3RcXFwiOygoKT0+e2NvbnN0IHQ9d2luZG93LGU9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LGM9W1xcXCJkYXJrXFxcIixcXFwibGlnaHRcXFwiXSxuPWdldFN0b3JhZ2VWYWx1ZShcXFwibG9jYWxTdG9yYWdlXFxcIixcXFwibnV4dC1jb2xvci1tb2RlXFxcIil8fFxcXCJzeXN0ZW1cXFwiO2xldCBpPW49PT1cXFwic3lzdGVtXFxcIj91KCk6bjtjb25zdCByPWUuZ2V0QXR0cmlidXRlKFxcXCJkYXRhLWNvbG9yLW1vZGUtZm9yY2VkXFxcIik7ciYmKGk9ciksbChpKSx0W1xcXCJfX05VWFRfQ09MT1JfTU9ERV9fXFxcIl09e3ByZWZlcmVuY2U6bix2YWx1ZTppLGdldENvbG9yU2NoZW1lOnUsYWRkQ29sb3JTY2hlbWU6bCxyZW1vdmVDb2xvclNjaGVtZTpkfTtmdW5jdGlvbiBsKG8pe2NvbnN0IHM9XFxcIlxcXCIrbytcXFwiLW1vZGVcXFwiLGE9XFxcIlxcXCI7ZS5jbGFzc0xpc3Q/ZS5jbGFzc0xpc3QuYWRkKHMpOmUuY2xhc3NOYW1lKz1cXFwiIFxcXCIrcyxhJiZlLnNldEF0dHJpYnV0ZShcXFwiZGF0YS1cXFwiK2Esbyl9ZnVuY3Rpb24gZChvKXtjb25zdCBzPVxcXCJcXFwiK28rXFxcIi1tb2RlXFxcIixhPVxcXCJcXFwiO2UuY2xhc3NMaXN0P2UuY2xhc3NMaXN0LnJlbW92ZShzKTplLmNsYXNzTmFtZT1lLmNsYXNzTmFtZS5yZXBsYWNlKG5ldyBSZWdFeHAocyxcXFwiZ1xcXCIpLFxcXCJcXFwiKSxhJiZlLnJlbW92ZUF0dHJpYnV0ZShcXFwiZGF0YS1cXFwiK2EpfWZ1bmN0aW9uIGYobyl7cmV0dXJuIHQubWF0Y2hNZWRpYShcXFwiKHByZWZlcnMtY29sb3Itc2NoZW1lXFxcIitvK1xcXCIpXFxcIil9ZnVuY3Rpb24gdSgpe2lmKHQubWF0Y2hNZWRpYSYmZihcXFwiXFxcIikubWVkaWEhPT1cXFwibm90IGFsbFxcXCIpe2Zvcihjb25zdCBvIG9mIGMpaWYoZihcXFwiOlxcXCIrbykubWF0Y2hlcylyZXR1cm4gb31yZXR1cm5cXFwibGlnaHRcXFwifX0pKCk7ZnVuY3Rpb24gZ2V0U3RvcmFnZVZhbHVlKHQsZSl7c3dpdGNoKHQpe2Nhc2VcXFwibG9jYWxTdG9yYWdlXFxcIjpyZXR1cm4gd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKGUpO2Nhc2VcXFwic2Vzc2lvblN0b3JhZ2VcXFwiOnJldHVybiB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbShlKTtjYXNlXFxcImNvb2tpZVxcXCI6cmV0dXJuIGdldENvb2tpZShlKTtkZWZhdWx0OnJldHVybiBudWxsfX1mdW5jdGlvbiBnZXRDb29raWUodCl7Y29uc3QgYz0oXFxcIjsgXFxcIit3aW5kb3cuZG9jdW1lbnQuY29va2llKS5zcGxpdChcXFwiOyBcXFwiK3QrXFxcIj1cXFwiKTtpZihjLmxlbmd0aD09PTIpcmV0dXJuIGMucG9wKCk/LnNwbGl0KFxcXCI7XFxcIikuc2hpZnQoKX1cIlxuICAgICAgIl0sImZpbGUiOiJ2aXJ0dWFsOm51eHQ6JTJGbWVkaWElMkZkZCUyRkRhdGElMkZQcm9qZWN0cyUyRmRpb25tYWljb24uZ2l0aHViLmlvJTJGLm51eHQlMkZjb2xvci1tb2RlLW9wdGlvbnMubWpzIn0=
