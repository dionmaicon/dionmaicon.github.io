// /node_modules/nuxt/dist/app/plugins/revive-payload.server.js
const __vite_ssr_import_0__ = await __vite_ssr_import__("vue", {"importedNames":["isReactive","isRef","isShallow","toRaw"]});
const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/composables/payload.js", {"importedNames":["definePayloadReducer"]});
const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/composables/error.js", {"importedNames":["isNuxtError"]});
const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/nuxt.js", {"importedNames":["defineNuxtPlugin"]});
const __vite_ssr_import_4__ = await __vite_ssr_import__("/@id/virtual:nuxt:%2Fmedia%2Fdd%2FData%2FProjects%2Fdionmaicon.github.io%2F.nuxt%2Fnuxt.config.mjs", {"importedNames":["componentIslands"]});
const reducers = [
  ["NuxtError", (data) => (0,__vite_ssr_import_2__.isNuxtError)(data) && data.toJSON()],
  ["EmptyShallowRef", (data) => (0,__vite_ssr_import_0__.isRef)(data) && (0,__vite_ssr_import_0__.isShallow)(data) && !data.value && (typeof data.value === "bigint" ? "0n" : JSON.stringify(data.value) || "_")],
  ["EmptyRef", (data) => (0,__vite_ssr_import_0__.isRef)(data) && !data.value && (typeof data.value === "bigint" ? "0n" : JSON.stringify(data.value) || "_")],
  ["ShallowRef", (data) => (0,__vite_ssr_import_0__.isRef)(data) && (0,__vite_ssr_import_0__.isShallow)(data) && data.value],
  ["ShallowReactive", (data) => (0,__vite_ssr_import_0__.isReactive)(data) && (0,__vite_ssr_import_0__.isShallow)(data) && (0,__vite_ssr_import_0__.toRaw)(data)],
  ["Ref", (data) => (0,__vite_ssr_import_0__.isRef)(data) && data.value],
  ["Reactive", (data) => (0,__vite_ssr_import_0__.isReactive)(data) && (0,__vite_ssr_import_0__.toRaw)(data)]
];
if (__vite_ssr_import_4__.componentIslands) {
  reducers.push(["Island", (data) => data && data?.__nuxt_island]);
};
__vite_ssr_exports__.default = (0,__vite_ssr_import_3__.defineNuxtPlugin)({
  name: "nuxt:revive-payload:server",
  setup() {
    for (const [reducer, fn] of reducers) {
      (0,__vite_ssr_import_1__.definePayloadReducer)(reducer, fn);
    }
  }
});
